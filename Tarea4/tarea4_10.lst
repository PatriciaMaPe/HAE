;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 21/03/2019 8:46:34
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF19  	GOTO        50
_interrupt:
;tarea4_10.c,3 :: 		void interrupt() //rutina de servicio de interrupciones (MikroC)
;tarea4_10.c,5 :: 		switch (estado){
0x0008	0xD00B      	BRA         L_interrupt0
;tarea4_10.c,6 :: 		case 0:
L_interrupt2:
;tarea4_10.c,7 :: 		PORTC.B0 = 0; // motor = 0
0x000A	0x9082      	BCF         PORTC, 0 
;tarea4_10.c,8 :: 		if(INTCON.INT1IE == 0) {
0x000C	0xB6F2      	BTFSC       INTCON, 3 
0x000E	0xD002      	BRA         L_interrupt3
;tarea4_10.c,9 :: 		estado=1;
0x0010	0x0E01      	MOVLW       1
0x0012	0x6E15      	MOVWF       _estado 
;tarea4_10.c,10 :: 		}
L_interrupt3:
;tarea4_10.c,11 :: 		break;
0x0014	0xD00B      	BRA         L_interrupt1
;tarea4_10.c,13 :: 		case 1:
L_interrupt4:
;tarea4_10.c,14 :: 		PORTC.B0 = 1;
0x0016	0x8082      	BSF         PORTC, 0 
;tarea4_10.c,15 :: 		if(INTCON.INT0IE = 1){
0x0018	0x88F2      	BSF         INTCON, 4 
0x001A	0xB8F2      	BTFSC       INTCON, 4 
;tarea4_10.c,16 :: 		estado=0;
0x001C	0x6A15      	CLRF        _estado 
;tarea4_10.c,17 :: 		}
L_interrupt5:
;tarea4_10.c,18 :: 		break;
0x001E	0xD006      	BRA         L_interrupt1
;tarea4_10.c,19 :: 		}
L_interrupt0:
0x0020	0x5015      	MOVF        _estado, 0 
0x0022	0x0A00      	XORLW       0
0x0024	0xE0F2      	BZ          L_interrupt2
0x0026	0x5015      	MOVF        _estado, 0 
0x0028	0x0A01      	XORLW       1
0x002A	0xE0F5      	BZ          L_interrupt4
L_interrupt1:
;tarea4_10.c,20 :: 		INTCON.INT0IF = 0; // se borra el flag de la interrupción INT0
0x002C	0x92F2      	BCF         INTCON, 1 
;tarea4_10.c,21 :: 		INTCON.INT1IF = 0;
0x002E	0x90F2      	BCF         INTCON, 0 
;tarea4_10.c,22 :: 		}
L_end_interrupt:
L__interrupt9:
0x0030	0x0011      	RETFIE      1
; end of _interrupt
_main:
;tarea4_10.c,25 :: 		void main() {
;tarea4_10.c,26 :: 		ADCON1 = 0x07;
0x0032	0x0E07      	MOVLW       7
0x0034	0x6EC1      	MOVWF       ADCON1 
;tarea4_10.c,27 :: 		TRISC.B0 = 0; //se configura el terminal RC0 como una salida digital
0x0036	0x9094      	BCF         TRISC, 0 
;tarea4_10.c,28 :: 		PORTC.B0 = 0; //se pone la salida RC0 a 0
0x0038	0x9082      	BCF         PORTC, 0 
;tarea4_10.c,29 :: 		TRISC=0;
0x003A	0x6A94      	CLRF        TRISC 
;tarea4_10.c,31 :: 		TRISB.B0 = 1; //se configura RB0 como entrada
0x003C	0x8093      	BSF         TRISB, 0 
;tarea4_10.c,32 :: 		INTCON2.INTEDG0 = 1; //la interrupción la provoca un flanco de subida (x=1)/ bajada (x=0)
0x003E	0x8CF1      	BSF         INTCON2, 6 
;tarea4_10.c,33 :: 		INTCON.INT0IF = 0; // se pone el flag de la interrupción INT0 a 0
0x0040	0x92F2      	BCF         INTCON, 1 
;tarea4_10.c,34 :: 		INTCON.INT0IE = 1; // se habilita la interrupción INT0
0x0042	0x88F2      	BSF         INTCON, 4 
;tarea4_10.c,37 :: 		TRISB.B1 = 1; // se configura RB1 como entrada
0x0044	0x8293      	BSF         TRISB, 1 
;tarea4_10.c,38 :: 		INTCON2.INTEDG1 = 1; // la interrupción la provoca un flanco de subida (x=1) / bajada (x=0)
0x0046	0x8AF1      	BSF         INTCON2, 5 
;tarea4_10.c,39 :: 		INTCON3.INT1IF = 0; // se pone el flag de la interrupción INT1 a 0
0x0048	0x90F0      	BCF         INTCON3, 0 
;tarea4_10.c,40 :: 		INTCON3.INT1IE = 1; // se habilita la interrupción INT1
0x004A	0x86F0      	BSF         INTCON3, 3 
;tarea4_10.c,41 :: 		INTCON.GIE = 1; // se habilitan las interrupciones en general
0x004C	0x8EF2      	BSF         INTCON, 7 
;tarea4_10.c,43 :: 		while(1);
L_main6:
0x004E	0xD7FF      	BRA         L_main6
;tarea4_10.c,44 :: 		}
L_end_main:
0x0050	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [42]    _interrupt
0x0032      [32]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _estado
0x0F82       [1]    PORTC
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF0       [1]    INTCON3
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
