;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 28/03/2019 14:18:24
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF23  	GOTO        70
_interrupt:
;p6c.c,3 :: 		void interrupt()
;p6c.c,5 :: 		if(INTCON3.INT1IF && INTCON3.INT1IE){
0x0008	0xA0F0      	BTFSS       INTCON3, 0 
0x000A	0xD00C      	BRA         L_interrupt2
0x000C	0xA6F0      	BTFSS       INTCON3, 3 
0x000E	0xD00A      	BRA         L_interrupt2
L__interrupt8:
;p6c.c,6 :: 		PORTC.B0=1;
0x0010	0x8082      	BSF         PORTC, 0 
;p6c.c,7 :: 		T0CON = 0x86;
0x0012	0x0E86      	MOVLW       134
0x0014	0x6ED5      	MOVWF       T0CON 
;p6c.c,8 :: 		TMR0H = (3036>>8);
0x0016	0x0E0B      	MOVLW       11
0x0018	0x6ED7      	MOVWF       TMR0H 
;p6c.c,9 :: 		TMR0L = 3036; //se carga el valor inicial (alfa) del ‘contador’
0x001A	0x0EDC      	MOVLW       220
0x001C	0x6ED6      	MOVWF       TMR0L 
;p6c.c,10 :: 		INTCON.TMR0IF = 1;
0x001E	0x84F2      	BSF         INTCON, 2 
;p6c.c,11 :: 		INTCON3.INT1IF = 0;
0x0020	0x90F0      	BCF         INTCON3, 0 
;p6c.c,12 :: 		INTCON3.INT1IE = 0;
0x0022	0x96F0      	BCF         INTCON3, 3 
;p6c.c,14 :: 		}
L_interrupt2:
;p6c.c,16 :: 		if(INTCON.TMR0IF){
0x0024	0xA4F2      	BTFSS       INTCON, 2 
0x0026	0xD00C      	BRA         L_interrupt3
;p6c.c,17 :: 		if(cont<15){
0x0028	0x0E0F      	MOVLW       15
0x002A	0x5C15      	SUBWF       _cont, 0 
0x002C	0xE206      	BC          L_interrupt4
;p6c.c,19 :: 		TMR0H = (3036>>8);
0x002E	0x0E0B      	MOVLW       11
0x0030	0x6ED7      	MOVWF       TMR0H 
;p6c.c,20 :: 		TMR0L = 3036; //se carga el valor inicial (alfa) del ‘contador’
0x0032	0x0EDC      	MOVLW       220
0x0034	0x6ED6      	MOVWF       TMR0L 
;p6c.c,21 :: 		cont++;
0x0036	0x2A15      	INCF        _cont, 1 
;p6c.c,24 :: 		}else{
0x0038	0xD003      	BRA         L_interrupt5
L_interrupt4:
;p6c.c,25 :: 		T0CON.TMR0ON = 0;
0x003A	0x9ED5      	BCF         T0CON, 7 
;p6c.c,26 :: 		PORTC.B0=0;
0x003C	0x9082      	BCF         PORTC, 0 
;p6c.c,27 :: 		cont=0;
0x003E	0x6A15      	CLRF        _cont 
;p6c.c,28 :: 		}
L_interrupt5:
;p6c.c,30 :: 		}
L_interrupt3:
;p6c.c,31 :: 		INTCON.TMR0IF = 0; // se borra el flag
0x0040	0x94F2      	BCF         INTCON, 2 
;p6c.c,32 :: 		INTCON3.INT1IF = 0; // se borra el flag de la interrupción INT1
0x0042	0x90F0      	BCF         INTCON3, 0 
;p6c.c,34 :: 		}
L_end_interrupt:
L__interrupt10:
0x0044	0x0011      	RETFIE      1
; end of _interrupt
_main:
;p6c.c,35 :: 		void main()
;p6c.c,38 :: 		ADCON1 = 0x07; //configuración de los canales analógicos (AN) como digitales (PIC18F452)
0x0046	0x0E07      	MOVLW       7
0x0048	0x6EC1      	MOVWF       ADCON1 
;p6c.c,39 :: 		TRISC = 0; // salida digital
0x004A	0x6A94      	CLRF        TRISC 
;p6c.c,40 :: 		PORTC = 0;
0x004C	0x6A82      	CLRF        PORTC 
;p6c.c,43 :: 		TRISB.B1 = 1; // se configura RB1 como entrada
0x004E	0x8293      	BSF         TRISB, 1 
;p6c.c,46 :: 		INTCON2.INTEDG1 = 1; //la interrupción la provoca un flanco de subida (x=1)/ bajada (x=0)
0x0050	0x8AF1      	BSF         INTCON2, 5 
;p6c.c,47 :: 		INTCON3.INT1IF = 0; // se pone el flag de la interrupción INT1 a 0
0x0052	0x90F0      	BCF         INTCON3, 0 
;p6c.c,48 :: 		INTCON3.INT1IE = 1; // se habilita la interrupción INT1
0x0054	0x86F0      	BSF         INTCON3, 3 
;p6c.c,51 :: 		INTCON.TMR0IF = 0; // se pone el flag a 0
0x0056	0x94F2      	BCF         INTCON, 2 
;p6c.c,52 :: 		INTCON.TMR0IE = 1; // se habilita la interrupción del Timer 0
0x0058	0x8AF2      	BSF         INTCON, 5 
;p6c.c,54 :: 		INTCON.GIE = 1; // se habilitan las interrupciones en general
0x005A	0x8EF2      	BSF         INTCON, 7 
;p6c.c,56 :: 		cont = 0;
0x005C	0x6A15      	CLRF        _cont 
;p6c.c,58 :: 		while(1)
L_main6:
;p6c.c,59 :: 		asm nop;
0x005E	0x0000      	NOP
0x0060	0xD7FE      	BRA         L_main6
;p6c.c,60 :: 		}
L_end_main:
0x0062	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [62]    _interrupt
0x0046      [30]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _cont
0x0F82       [1]    PORTC
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0FC1       [1]    ADCON1
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF0       [1]    INTCON3
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
